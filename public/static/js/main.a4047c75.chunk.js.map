{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleteEvent","eventLoaded","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","message","placeholder","onChange","NavBar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","console","log","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","view","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4047c75.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n                method,\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n                method,\r\n                headers: {\r\n                    'x-token': token,\r\n                },\r\n            } \r\n        );\r\n    } else {\r\n        return fetch( url, {\r\n                method,\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'x-token': token,\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken,\r\n};","export const types = {\r\n    uiOpenModal: '[ui] Open modal', \r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventStartAddNew: '[event] Start add new event',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authLogout: '[auth] Logout',\r\n};","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n\r\n\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n    \r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n                dispatch(eventAddNew( event ));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    };\r\n};\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated( event ));\r\n            } else {\r\n                Swal.fire('Error', body.message, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    };\r\n};\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = ( ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleteEvent());\r\n            } else {\r\n                Swal.fire('Error', body.message, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const eventDeleteEvent = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n        try {\r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n        }\r\n\r\n    };\r\n};\r\n//authCheckingFinish\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value,\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: \"ivan.topp.sandoval@gmail.com\",\r\n        lPassword: \"123456\",\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Perico',\r\n        rEmail: \"Perico@gmail.com\",\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\",\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState(now.toDate());\r\n    const [ dateEnd, setDateEnd ] = useState(nowPlus1.toDate());\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n        //TODO: Cerrar el modal\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            console.log('Fecha 2 debe ser mayor');\r\n            return Swal.fire('Error', 'La fecha final debe ser mayor a la fecha inicial.', 'error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ){\r\n            dispatch(eventStartUpdate( formValues ));\r\n        } else {\r\n            //TODO: Realizar grabación en BD\r\n            dispatch(eventStartAddNew( formValues ));\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora final</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"                        \r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = (e) => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { useState } from 'react';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [ dispatch ]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        };\r\n\r\n        return {\r\n            style\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                view={lastView}\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                onView={ onViewChange }\r\n            />\r\n\r\n            <AddNewFab />\r\n            \r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route {...rest}\r\n            component={\r\n                (props) => (\r\n                    ( isAuthenticated )\r\n                        ? <Component {...props} />\r\n                        : <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}; \r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={\r\n                (props) => (\r\n                    ( !isAuthenticated )\r\n                        ? <Component {...props} />\r\n                        : <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}; \r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch])\r\n\r\n  if(checking){\r\n    return (<h5>Espere...</h5>);\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n    <div>\r\n      \r\n      <Switch>\r\n        <PublicRoute exact path=\"/login\" component={ LoginScreen } isAuthenticated={ !!uid }/>\r\n        <PrivateRoute exact path=\"/\" component={ CalendarScreen } isAuthenticated={ !!uid }/>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null, \r\n};\r\n\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload,\r\n            };\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from '../types/types';\r\n\r\n/*\r\n    {\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        notes: 'Comprar pastel',\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Iván Topp',\r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            };\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            };\r\n        \r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            };\r\n    \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}